/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Triquitraque;

import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author Equipo
 */
public class Tablero3x3 extends javax.swing.JFrame {

    private Juego partida;
    private Color colorj1;
    private Color colorj2;

    /**
     * Creates new form Login
     */
    public Tablero3x3(Juego partida) {
        initComponents();
        this.partida = partida;
        this.crearColores();

    }

    private void crearColores() {
        if (this.partida.j1.getColor().equals("Rojo")) {
            this.colorj1 = Color.red;
            this.colorj2 = Color.blue;
        } else {
            this.colorj1 = Color.blue;
            this.colorj2 = Color.red;
        }
    }

    private Tablero3x3() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    
    private void reiniciarTablero(){
        
        this.txtConsola.setText("");

        this.btPos00.setSelected(false);
        this.btPos00.setText("");
        this.btPos00.setBackground(Color.LIGHT_GRAY);

        this.btPos01.setSelected(false);
        this.btPos01.setText("");
        this.btPos01.setBackground(Color.LIGHT_GRAY);

        this.btPos02.setSelected(false);
        this.btPos02.setText("");
        this.btPos02.setBackground(Color.LIGHT_GRAY);

        this.btPos10.setSelected(false);
        this.btPos10.setText("");
        this.btPos10.setBackground(Color.LIGHT_GRAY);

        this.btPos11.setSelected(false);
        this.btPos11.setText("");
        this.btPos11.setBackground(Color.LIGHT_GRAY);

        this.btPos12.setSelected(false);
        this.btPos12.setText("");
        this.btPos12.setBackground(Color.LIGHT_GRAY);

        this.btPos20.setSelected(false);
        this.btPos20.setText("");
        this.btPos20.setBackground(Color.LIGHT_GRAY);

        this.btPos21.setSelected(false);
        this.btPos21.setText("");
        this.btPos21.setBackground(Color.LIGHT_GRAY);

        this.btPos22.setSelected(false);
        this.btPos22.setText("");
        this.btPos22.setBackground(Color.LIGHT_GRAY);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        panel1 = new java.awt.Panel();
        btPos00 = new javax.swing.JToggleButton();
        btPos01 = new javax.swing.JToggleButton();
        btPos02 = new javax.swing.JToggleButton();
        btPos10 = new javax.swing.JToggleButton();
        btPos11 = new javax.swing.JToggleButton();
        btPos12 = new javax.swing.JToggleButton();
        btPos20 = new javax.swing.JToggleButton();
        btPos21 = new javax.swing.JToggleButton();
        btPos22 = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtConsola = new javax.swing.JTextArea();
        BtReiniciar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Juego Triki Traki");

        panel1.setBackground(new java.awt.Color(102, 102, 255));

        btPos00.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPos00ActionPerformed(evt);
            }
        });

        btPos01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPos01ActionPerformed(evt);
            }
        });

        btPos02.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPos02ActionPerformed(evt);
            }
        });

        btPos10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPos10ActionPerformed(evt);
            }
        });

        btPos11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPos11ActionPerformed(evt);
            }
        });

        btPos12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPos12ActionPerformed(evt);
            }
        });

        btPos20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPos20ActionPerformed(evt);
            }
        });

        btPos21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPos21ActionPerformed(evt);
            }
        });

        btPos22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPos22ActionPerformed(evt);
            }
        });

        txtConsola.setColumns(20);
        txtConsola.setRows(5);
        jScrollPane1.setViewportView(txtConsola);

        BtReiniciar.setText("Reiniciar Juego");
        BtReiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtReiniciarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(panel1Layout.createSequentialGroup()
                            .addGap(137, 137, 137)
                            .addComponent(BtReiniciar)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel1Layout.createSequentialGroup()
                                .addComponent(btPos20, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btPos21, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btPos22, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(panel1Layout.createSequentialGroup()
                                    .addComponent(btPos10, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btPos11, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btPos12, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(panel1Layout.createSequentialGroup()
                                    .addComponent(btPos00, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btPos01, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btPos02, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(41, 41, 41)))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btPos02, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btPos01, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btPos00, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btPos12, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btPos11, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btPos10, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btPos22, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btPos21, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btPos20, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(BtReiniciar)
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btPos00ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPos00ActionPerformed

        if (this.btPos00.getText().isEmpty() || this.btPos00.getText().isEmpty()) {
            if (this.partida.turno % 2 != 0) {
                this.btPos00.setText(String.valueOf(this.partida.j1.getFicha()));
                this.btPos00.setBackground(colorj1);
                this.txtConsola.setText(this.txtConsola.getText() + "Ha jugado " + this.partida.j1.obtenerNombre() + "\n");
                
                if(this.partida.tab.colocarFicha(0, 0, this.partida.j1.getFicha())){
                    int respuesta = JOptionPane.showInternalConfirmDialog(null,"¿Desea Jugar La Revancha?");

                    switch (respuesta) {
                        case JOptionPane.YES_OPTION:
                            this.partida.finalizarPartida();
                            this.reiniciarTablero();
                            break;
                        case JOptionPane.NO_OPTION:
                            this.partida.finalizarPartida();
                            this.dispose();
                            lobby p = new lobby();
                            p.setVisible(true);
                            break;
                        default:
                            this.dispose();
                            break;
                    }
                    
                }
                     
            } else {
                this.btPos00.setText(String.valueOf(this.partida.j2.getFicha()));
                this.btPos00.setBackground(colorj2);
                this.txtConsola.setText(this.txtConsola.getText() + "Ha jugado " + this.partida.j2.obtenerNombre() + "\n");
                
                if(this.partida.tab.colocarFicha(0, 0, this.partida.j2.getFicha())){
                    int respuesta = JOptionPane.showInternalConfirmDialog(null,"¿Desea Jugar La Revancha?");
                    switch (respuesta) {
                        case JOptionPane.YES_OPTION:
                            this.partida.finalizarPartida();
                            this.reiniciarTablero();
                            break;
                        case JOptionPane.NO_OPTION:
                            this.dispose();
                            lobby p = new lobby();
                            p.setVisible(true);
                            break;
                        default:
                            this.dispose();
                            break;
                    }
                    
                }
            }
            
            this.partida.cambiarTurno();
        }

    }//GEN-LAST:event_btPos00ActionPerformed

    private void btPos01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPos01ActionPerformed

        if (this.btPos01.getText().isEmpty() || this.btPos01.getText().isEmpty()) {
            if (this.partida.turno % 2 != 0) {
                this.btPos01.setText(String.valueOf(this.partida.j1.getFicha()));
                this.btPos01.setBackground(colorj1);
                this.txtConsola.setText(this.txtConsola.getText() + "Ha jugado " + this.partida.j1.obtenerNombre() + "\n");
                
                if(this.partida.tab.colocarFicha(0, 1, this.partida.j1.getFicha())){
                    int respuesta = JOptionPane.showInternalConfirmDialog(null,"¿Desea Jugar La Revancha?");

                    switch (respuesta) {
                        case JOptionPane.YES_OPTION:
                            this.partida.finalizarPartida();
                            this.reiniciarTablero();
                            break;
                        case JOptionPane.NO_OPTION:
                            this.dispose();
                            lobby p = new lobby();
                            p.setVisible(true);
                            break;
                        default:
                            this.dispose();
                            break;
                    }
                    
                }
                
            } else {
                this.btPos01.setText(String.valueOf(this.partida.j2.getFicha()));
                this.btPos01.setBackground(colorj2);
                this.txtConsola.setText(this.txtConsola.getText() + "Ha jugado " + this.partida.j2.obtenerNombre() + "\n");
                
                if(this.partida.tab.colocarFicha(0, 1, this.partida.j2.getFicha())){
                    int respuesta = JOptionPane.showInternalConfirmDialog(null,"¿Desea Jugar La Revancha?");

                    switch (respuesta) {
                        case JOptionPane.YES_OPTION:
                            this.partida.finalizarPartida();
                            this.reiniciarTablero();
                            break;
                        case JOptionPane.NO_OPTION:
                            this.dispose();
                            lobby p = new lobby();
                            p.setVisible(true);
                            break;
                        default:
                            this.dispose();
                            break;
                    }
                    
                }
            }
            this.partida.cambiarTurno();
        }

    }//GEN-LAST:event_btPos01ActionPerformed

    private void btPos02ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPos02ActionPerformed

        if (this.btPos02.getText().isEmpty() || this.btPos02.getText().isEmpty()) {
            if (this.partida.turno % 2 != 0) {
                this.btPos02.setText(String.valueOf(this.partida.j1.getFicha()));
                this.btPos02.setBackground(colorj1);
                this.txtConsola.setText(this.txtConsola.getText() + "Ha jugado " + this.partida.j1.obtenerNombre() + "\n");
                
                if(this.partida.tab.colocarFicha(0, 2, this.partida.j1.getFicha())){
                    int respuesta = JOptionPane.showInternalConfirmDialog(null,"¿Desea Jugar La Revancha?");

                    switch (respuesta) {
                        case JOptionPane.YES_OPTION:
                            this.partida.finalizarPartida();
                            this.reiniciarTablero();
                            break;
                        case JOptionPane.NO_OPTION:
                            this.dispose();
                            lobby p = new lobby();
                            p.setVisible(true);
                            break;
                        default:
                            this.dispose();
                            break;
                    }
                    
                }
                
            } else {
                this.btPos02.setText(String.valueOf(this.partida.j2.getFicha()));
                this.btPos02.setBackground(colorj2);
                this.txtConsola.setText(this.txtConsola.getText() + "Ha jugado " + this.partida.j2.obtenerNombre() + "\n");
                
                if(this.partida.tab.colocarFicha(0, 2, this.partida.j2.getFicha())){
                    int respuesta = JOptionPane.showInternalConfirmDialog(null,"¿Desea Jugar La Revancha?");

                    switch (respuesta) {
                        case JOptionPane.YES_OPTION:
                            this.partida.finalizarPartida();
                            this.reiniciarTablero();
                            break;
                        case JOptionPane.NO_OPTION:
                            this.dispose();
                            lobby p = new lobby();
                            p.setVisible(true);
                            break;
                        default:
                            this.dispose();
                            break;
                    }
                    
                }
            }
            this.partida.cambiarTurno();
        }
    }//GEN-LAST:event_btPos02ActionPerformed

    private void btPos10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPos10ActionPerformed

        if (this.btPos10.getText().isEmpty() || this.btPos10.getText().isEmpty()) {
            if (this.partida.turno % 2 != 0) {
                this.btPos10.setText(String.valueOf(this.partida.j1.getFicha()));
                this.btPos10.setBackground(colorj1);
                this.txtConsola.setText(this.txtConsola.getText() + "Ha jugado " + this.partida.j1.obtenerNombre() + "\n");
                if(this.partida.tab.colocarFicha(1, 0, this.partida.j1.getFicha())){
                    int respuesta = JOptionPane.showInternalConfirmDialog(null,"¿Desea Jugar La Revancha?");

                    switch (respuesta) {
                        case JOptionPane.YES_OPTION:
                            this.partida.finalizarPartida();
                            this.reiniciarTablero();
                            break;
                        case JOptionPane.NO_OPTION:
                            this.dispose();
                            lobby p = new lobby();
                            p.setVisible(true);
                            break;
                        default:
                            this.dispose();
                            break;
                    }
                    
                }
                
            } else {
                this.btPos10.setText(String.valueOf(this.partida.j2.getFicha()));
                this.btPos10.setBackground(colorj2);
                this.txtConsola.setText(this.txtConsola.getText() + "Ha jugado " + this.partida.j2.obtenerNombre() + "\n");
                if(this.partida.tab.colocarFicha(1, 0, this.partida.j2.getFicha())){
                    int respuesta = JOptionPane.showInternalConfirmDialog(null,"¿Desea Jugar La Revancha?");

                    switch (respuesta) {
                        case JOptionPane.YES_OPTION:
                            this.partida.finalizarPartida();
                            this.reiniciarTablero();
                            break;
                        case JOptionPane.NO_OPTION:
                            this.dispose();
                            lobby p = new lobby();
                            p.setVisible(true);
                            break;
                        default:
                            this.dispose();
                            break;
                    }
                    
                }
            }
            this.partida.cambiarTurno();
        }
    }//GEN-LAST:event_btPos10ActionPerformed

    private void btPos11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPos11ActionPerformed

        if (this.btPos11.getText().isEmpty() || this.btPos11.getText().isEmpty()) {
            if (this.partida.turno % 2 != 0) {
                this.btPos11.setText(String.valueOf(this.partida.j1.getFicha()));
                this.btPos11.setBackground(colorj1);
                this.txtConsola.setText(this.txtConsola.getText() + "Ha jugado " + this.partida.j1.obtenerNombre() + "\n");
               
                if(this.partida.tab.colocarFicha(1, 1, this.partida.j1.getFicha())){
                    int respuesta = JOptionPane.showInternalConfirmDialog(null,"¿Desea Jugar La Revancha?");

                    switch (respuesta) {
                        case JOptionPane.YES_OPTION:
                            this.partida.finalizarPartida();
                            this.reiniciarTablero();
                            break;
                        case JOptionPane.NO_OPTION:
                            this.dispose();
                            lobby p = new lobby();
                            p.setVisible(true);
                            break;
                        default:
                            this.dispose();
                            break;
                    }
                    
                }
                
            } else {
                this.btPos11.setText(String.valueOf(this.partida.j2.getFicha()));
                this.btPos11.setBackground(colorj2);
                this.txtConsola.setText(this.txtConsola.getText() + "Ha jugado " + this.partida.j2.obtenerNombre() + "\n");
                
                if(this.partida.tab.colocarFicha(1, 1, this.partida.j2.getFicha())){
                    int respuesta = JOptionPane.showInternalConfirmDialog(null,"¿Desea Jugar La Revancha?");

                    switch (respuesta) {
                        case JOptionPane.YES_OPTION:
                            this.partida.finalizarPartida();
                            this.reiniciarTablero();
                            break;
                        case JOptionPane.NO_OPTION:
                            this.dispose();
                            lobby p = new lobby();
                            p.setVisible(true);
                            break;
                        default:
                            this.dispose();
                            break;
                    }
                    
                }
            }
            this.partida.cambiarTurno();
        }
    }//GEN-LAST:event_btPos11ActionPerformed

    private void btPos12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPos12ActionPerformed

        if (this.btPos12.getText().isEmpty() || this.btPos12.getText().isEmpty()) {
            if (this.partida.turno % 2 != 0) {
                this.btPos12.setText(String.valueOf(this.partida.j1.getFicha()));
                this.btPos12.setBackground(colorj1);
                this.txtConsola.setText(this.txtConsola.getText() + "Ha jugado " + this.partida.j1.obtenerNombre() + "\n");
                
                if(this.partida.tab.colocarFicha(1, 2, this.partida.j1.getFicha())){
                    int respuesta = JOptionPane.showInternalConfirmDialog(null,"¿Desea Jugar La Revancha?");

                    switch (respuesta) {
                        case JOptionPane.YES_OPTION:
                            this.partida.finalizarPartida();
                            this.reiniciarTablero();
                            break;
                        case JOptionPane.NO_OPTION:
                            this.dispose();
                            lobby p = new lobby();
                            p.setVisible(true);
                            break;
                        default:
                            this.dispose();
                            break;
                    }
                    
                }
                
            } else {
                this.btPos12.setText(String.valueOf(this.partida.j2.getFicha()));
                this.btPos12.setBackground(colorj2);
                this.txtConsola.setText(this.txtConsola.getText() + "Ha jugado " + this.partida.j2.obtenerNombre() + "\n");
                
                if(this.partida.tab.colocarFicha(1, 2, this.partida.j2.getFicha())){
                    int respuesta = JOptionPane.showInternalConfirmDialog(null,"¿Desea Jugar La Revancha?");

                    switch (respuesta) {
                        case JOptionPane.YES_OPTION:
                            this.partida.finalizarPartida();
                            this.reiniciarTablero();
                            break;
                        case JOptionPane.NO_OPTION:
                            this.dispose();
                            lobby p = new lobby();
                            p.setVisible(true);
                            break;
                        default:
                            this.dispose();
                            break;
                    }
                    
                }
            }
            this.partida.cambiarTurno();
        }
    }//GEN-LAST:event_btPos12ActionPerformed

    private void btPos20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPos20ActionPerformed
        if (this.btPos20.getText().isEmpty() || this.btPos20.getText().isEmpty()) {
            if (this.partida.turno % 2 != 0) {
                this.btPos20.setText(String.valueOf(this.partida.j1.getFicha()));
                this.btPos20.setBackground(colorj1);
                this.txtConsola.setText(this.txtConsola.getText() + "Ha jugado " + this.partida.j1.obtenerNombre() + "\n");
                
                if(this.partida.tab.colocarFicha(2, 0, this.partida.j1.getFicha())){
                    int respuesta = JOptionPane.showInternalConfirmDialog(null,"¿Desea Jugar La Revancha?");

                    switch (respuesta) {
                        case JOptionPane.YES_OPTION:
                            this.partida.finalizarPartida();
                            this.reiniciarTablero();
                            break;
                        case JOptionPane.NO_OPTION:
                            this.dispose();
                            lobby p = new lobby();
                            p.setVisible(true);
                            break;
                        default:
                            this.dispose();
                            break;
                    }
                    
                }
            } else {
                this.btPos20.setText(String.valueOf(this.partida.j2.getFicha()));
                this.btPos20.setBackground(colorj2);
                this.txtConsola.setText(this.txtConsola.getText() + "Ha jugado " + this.partida.j2.obtenerNombre() + "\n");
               
                if(this.partida.tab.colocarFicha(2, 0, this.partida.j2.getFicha())){
                    int respuesta = JOptionPane.showInternalConfirmDialog(null,"¿Desea Jugar La Revancha?");

                    switch (respuesta) {
                        case JOptionPane.YES_OPTION:
                            this.partida.finalizarPartida();
                            this.reiniciarTablero();
                            break;
                        case JOptionPane.NO_OPTION:
                            this.dispose();
                            lobby p = new lobby();
                            p.setVisible(true);
                            break;
                        default:
                            this.dispose();
                            break;
                    }
                    
                }
            }
            this.partida.cambiarTurno();
        }
    }//GEN-LAST:event_btPos20ActionPerformed

    private void btPos21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPos21ActionPerformed
        if (this.btPos21.getText().isEmpty() || this.btPos21.getText().isEmpty()) {
            if (this.partida.turno % 2 != 0) {
                this.btPos21.setText(String.valueOf(this.partida.j1.getFicha()));
                this.btPos21.setBackground(colorj1);
                this.txtConsola.setText(this.txtConsola.getText() + "Ha jugado " + this.partida.j1.obtenerNombre() + "\n");
               
                if(this.partida.tab.colocarFicha(2, 1, this.partida.j1.getFicha())){
                    int respuesta = JOptionPane.showInternalConfirmDialog(null,"¿Desea Jugar La Revancha?");

                    switch (respuesta) {
                        case JOptionPane.YES_OPTION:
                            this.partida.finalizarPartida();
                            this.reiniciarTablero();
                            break;
                        case JOptionPane.NO_OPTION:
                            this.dispose();
                            lobby p = new lobby();
                            p.setVisible(true);
                            break;
                        default:
                            this.dispose();
                            break;
                    }
                    
                }
            } else {
                this.btPos21.setText(String.valueOf(this.partida.j2.getFicha()));
                this.btPos21.setBackground(colorj2);
                this.txtConsola.setText(this.txtConsola.getText() + "Ha jugado " + this.partida.j2.obtenerNombre() + "\n");
                
                if(this.partida.tab.colocarFicha(2, 1, this.partida.j2.getFicha())){
                    int respuesta = JOptionPane.showInternalConfirmDialog(null,"¿Desea Jugar La Revancha?");

                    switch (respuesta) {
                        case JOptionPane.YES_OPTION:
                            this.partida.finalizarPartida();
                            this.reiniciarTablero();
                            break;
                        case JOptionPane.NO_OPTION:
                            this.dispose();
                            lobby p = new lobby();
                            p.setVisible(true);
                            break;
                        default:
                            this.dispose();
                            break;
                    }
                    
                }
            }
            this.partida.cambiarTurno();
        }
    }//GEN-LAST:event_btPos21ActionPerformed

    private void btPos22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPos22ActionPerformed
        if (this.btPos22.getText().isEmpty() || this.btPos22.getText().isEmpty()) {
            if (this.partida.turno % 2 != 0) {
                this.btPos22.setText(String.valueOf(this.partida.j1.getFicha()));
                this.btPos22.setBackground(colorj1);
                this.txtConsola.setText(this.txtConsola.getText() + "Ha jugado " + this.partida.j1.obtenerNombre() + "\n");
                
                if(this.partida.tab.colocarFicha(2, 2, this.partida.j1.getFicha())){
                    int respuesta = JOptionPane.showInternalConfirmDialog(null,"¿Desea Jugar La Revancha?");

                    switch (respuesta) {
                        case JOptionPane.YES_OPTION:
                            this.partida.finalizarPartida();
                            this.reiniciarTablero();
                            break;
                        case JOptionPane.NO_OPTION:
                            this.dispose();
                            lobby p = new lobby();
                            p.setVisible(true);
                            break;
                        default:
                            this.dispose();
                            break;
                    }
                    
                }
            } else {
                this.btPos22.setText(String.valueOf(this.partida.j2.getFicha()));
                this.btPos22.setBackground(colorj2);
                this.txtConsola.setText(this.txtConsola.getText() + "Ha jugado " + this.partida.j2.obtenerNombre() + "\n");
                
                if(this.partida.tab.colocarFicha(2, 2, this.partida.j2.getFicha())){
                    int respuesta = JOptionPane.showInternalConfirmDialog(null,"¿Desea Jugar La Revancha?");

                    switch (respuesta) {
                        case JOptionPane.YES_OPTION:
                            this.partida.finalizarPartida();
                            this.reiniciarTablero();
                            break;
                        case JOptionPane.NO_OPTION:
                            this.dispose();
                            lobby p = new lobby();
                            p.setVisible(true);
                            break;
                        default:
                            this.dispose();
                            break;
                    }
                    
                }
            }
            this.partida.cambiarTurno();
        }
    }//GEN-LAST:event_btPos22ActionPerformed

    private void BtReiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtReiniciarActionPerformed

        this.reiniciarTablero();
        // TODO add your handling code here:
    }//GEN-LAST:event_BtReiniciarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tablero3x3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tablero3x3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tablero3x3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tablero3x3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tablero3x3().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtReiniciar;
    private javax.swing.JToggleButton btPos00;
    private javax.swing.JToggleButton btPos01;
    private javax.swing.JToggleButton btPos02;
    private javax.swing.JToggleButton btPos10;
    private javax.swing.JToggleButton btPos11;
    private javax.swing.JToggleButton btPos12;
    private javax.swing.JToggleButton btPos20;
    private javax.swing.JToggleButton btPos21;
    private javax.swing.JToggleButton btPos22;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Panel panel1;
    private javax.swing.JTextArea txtConsola;
    // End of variables declaration//GEN-END:variables
}
